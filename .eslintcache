[{"C:\\projects\\sports-pickem-app\\src\\index.js":"1","C:\\projects\\sports-pickem-app\\src\\App.js":"2","C:\\projects\\sports-pickem-app\\src\\reportWebVitals.js":"3","C:\\projects\\sports-pickem-app\\src\\components\\VersusJumbo\\VersusJumbo.js":"4","C:\\projects\\sports-pickem-app\\src\\components\\LoadScreen\\LoadScreen.js":"5","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\ChooseSeason.js":"6","C:\\projects\\sports-pickem-app\\src\\graphql.js":"7","C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickCard.js":"8","C:\\projects\\sports-pickem-app\\src\\components\\Game\\SubmitPicks\\SubmitPicks.js":"9","C:\\projects\\sports-pickem-app\\src\\components\\Game\\Game.js":"10","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\SeasonTab.js":"11","C:\\projects\\sports-pickem-app\\src\\components\\Game\\GameLogic.js":"12","C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickButton.js":"13","C:\\projects\\sports-pickem-app\\src\\components\\Banner\\Banner.js":"14","C:\\projects\\sports-pickem-app\\src\\components\\Results\\Results.js":"15","C:\\projects\\sports-pickem-app\\src\\components\\Results\\ResultsLogic.js":"16","C:\\projects\\sports-pickem-app\\src\\components\\services.js":"17","C:\\projects\\sports-pickem-app\\src\\components\\Record\\Record.js":"18","C:\\projects\\sports-pickem-app\\src\\components\\Record\\SeasonRecord.js":"19","C:\\projects\\sports-pickem-app\\src\\components\\Record\\RecordLogic.js":"20"},{"size":894,"mtime":1611362919492,"results":"21","hashOfConfig":"22"},{"size":2394,"mtime":1611558669729,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":227,"mtime":1611292081945,"results":"25","hashOfConfig":"22"},{"size":475,"mtime":1611292081944,"results":"26","hashOfConfig":"22"},{"size":1051,"mtime":1611368072901,"results":"27","hashOfConfig":"22"},{"size":472,"mtime":1611368874326,"results":"28","hashOfConfig":"22"},{"size":1531,"mtime":1611521150397,"results":"29","hashOfConfig":"22"},{"size":280,"mtime":1611360532933,"results":"30","hashOfConfig":"22"},{"size":2086,"mtime":1611555754754,"results":"31","hashOfConfig":"22"},{"size":432,"mtime":1611555076760,"results":"32","hashOfConfig":"22"},{"size":1350,"mtime":1611557503810,"results":"33","hashOfConfig":"22"},{"size":388,"mtime":1611382454318,"results":"34","hashOfConfig":"22"},{"size":813,"mtime":1611556754955,"results":"35","hashOfConfig":"22"},{"size":1575,"mtime":1611557564888,"results":"36","hashOfConfig":"22"},{"size":1235,"mtime":1611540445956,"results":"37","hashOfConfig":"22"},{"size":121,"mtime":1611541976469,"results":"38","hashOfConfig":"22"},{"size":900,"mtime":1611560528871,"results":"39","hashOfConfig":"22"},{"size":182,"mtime":1611558465375,"results":"40","hashOfConfig":"22"},{"size":186,"mtime":1611560613094,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1nwuhvc",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\projects\\sports-pickem-app\\src\\index.js",[],["88","89"],"C:\\projects\\sports-pickem-app\\src\\App.js",["90","91"],"C:\\projects\\sports-pickem-app\\src\\reportWebVitals.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\VersusJumbo\\VersusJumbo.js",[],["92","93"],"C:\\projects\\sports-pickem-app\\src\\components\\LoadScreen\\LoadScreen.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\ChooseSeason.js",["94","95","96"],"import { useQuery } from '@apollo/react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport SeasonTab from './SeasonTab';\r\n\r\n\r\nconst ChooseSeason = (props) => {\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col-12'>\r\n                    <h3>Choose Historic NFL Season</h3>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <div className='list-group'>\r\n                        {\r\n                            props.seasons ?\r\n                                props.seasons.map((val) => {\r\n                                    return (\r\n                                        <SeasonTab seasonYear={val.strSeason} setChosenSeason={props.setChosenSeason}/>\r\n                                    )\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseSeason","C:\\projects\\sports-pickem-app\\src\\graphql.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickCard.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\SubmitPicks\\SubmitPicks.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\Game.js",["97","98","99","100","101"],"import { useEffect, useState } from \"react\";\r\nimport { useQuery, useSubscription } from '@apollo/react-hooks';\r\nimport { GET_SEASON } from '../../graphql';\r\nimport LoadScreen from \"../LoadScreen/LoadScreen\";\r\nimport { getUniqueRandoms } from \"./GameLogic\";\r\nimport PickCard from './PickCard/PickCard';\r\nimport './Game.css';\r\nimport { navigate } from \"hookrouter\";\r\n\r\n\r\nconst Game = (props) => {\r\n\r\n    \r\n    const { loading, error, data } = useQuery(GET_SEASON, {\r\n        variables: { year: props.chosenSeason }\r\n    });\r\n    const [allAnswered, setAllAnswered] = useState(false);\r\n    \r\n\r\n    useEffect(() => {\r\n        if(data && props.newGame) {\r\n            console.log('you shouldnt see this on the second round')\r\n            props.setEvents(data.season.events);\r\n            props.setNewGame(!props.newGame);\r\n        }\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        if(props.events) {\r\n            console.log('i ran')\r\n            let picks = getUniqueRandoms(props.events, 4);\r\n            props.setRandomPicks(picks);\r\n        }\r\n    }, [props.events]);\r\n\r\n    useEffect(() => {\r\n        for(let x in props.picks) {\r\n            if(!props.picks[x]) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        setAllAnswered(true)\r\n    }, [props.picks]);\r\n\r\n    \r\n\r\n\r\n\r\n    if(!props.randomPicks) return <LoadScreen />\r\n    else {\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row pt-4'>\r\n                        {props.randomPicks.map((val, ind) => {\r\n                            return <PickCard pickQuestion={val.strEvent} choiceA={val.strHomeTeam} choiceB={val.strAwayTeam} date={val.dateEvent} setPicks={props.setPicks} picks={props.picks} ind={ind}/>\r\n                        })}\r\n                    <button type='button' className={`btn-dark text-light submit-button ${allAnswered ? 'fixed-bottom d-flex justify-content-center align-items-center' : 'd-none'}`} onClick={() => navigate('/results')}>SUBMIT</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\SeasonTab.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\GameLogic.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickButton.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Banner\\Banner.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Results\\Results.js",["102"],"import { navigate } from \"hookrouter\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LoadScreen from \"../LoadScreen/LoadScreen\";\r\nimport { gradePicks, updateRecord } from './ResultsLogic';\r\n\r\n\r\nconst Results = (props) => {\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        console.log(props)\r\n        if(props.randomEvents.length) {\r\n            let grade = gradePicks(props.picks, props.randomEvents);\r\n            console.log(grade);\r\n            updateRecord(grade, props.record, props.setRecord, props.chosenSeason);\r\n            setLoading(!loading);\r\n        }\r\n    }, [props.randomEvents]);\r\n\r\n    if(loading) {\r\n        return <LoadScreen />\r\n    }\r\n    return (\r\n        <div className='container-fluid'>\r\n            <p>{`Your Overall Record: ${props.record.overall.correct}/${props.record.overall.total}`}</p>\r\n            <p>{`Your record for the ${props.chosenSeason} season: ${props.record.years[props.chosenSeason].correct}/${props.record.years[props.chosenSeason].total}`}</p>\r\n\r\n            <div className='row'>\r\n                <div className='btn btn-success' onClick={props.playAgain}>Keep Season and Play Again?</div>\r\n                <div className='btn btn-warning' onClick={props.resetSeason}>Change Season and Play Again?</div>\r\n                <div className='btn btn-info' onClick={() => navigate('/record')}>View Record</div>\r\n                <div className='btn btn-danger' onClick={props.resetGame}>Quit? (reset progress)</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","C:\\projects\\sports-pickem-app\\src\\components\\Results\\ResultsLogic.js",["103","104"],"import _ from 'lodash';\r\n\r\nexport const gradePicks = (picks, randomEvents) => {\r\n    let grade = [];\r\n    console.log(randomEvents);\r\n    randomEvents.map((randomEvent, pickNumber) => {\r\n        grade.push(analyzeOne(randomEvent, picks[pickNumber]));\r\n    })\r\n\r\n    return grade\r\n}\r\n\r\nexport const analyzeOne = (randomEvent, pick) => {\r\n    let winner = getWinner(randomEvent);\r\n    if(pick === winner) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const getWinner = (randomEvent) => {\r\n        \r\n    if(randomEvent['intHomeScore'] >= randomEvent['intAwayScore']) {\r\n        return randomEvent['strHomeTeam']\r\n    } else {\r\n        return randomEvent['strAwayTeam']\r\n    }\r\n\r\n}\r\n\r\nexport const updateRecord = (grade, record, setterMethod, year) => {\r\n\r\n    let deepClone = _.cloneDeep(record);\r\n    \r\n    if(!deepClone.years[year]) {\r\n        deepClone.years[year] = {\r\n            correct: 0,\r\n            total: 0\r\n        }\r\n    }\r\n\r\n    grade.map((val) => {\r\n        deepClone.overall.total++\r\n        deepClone.years[year].total++;\r\n        if(val) {\r\n            deepClone.overall.correct++;\r\n            deepClone.years[year].correct++;\r\n        }\r\n    });\r\n\r\n    setterMethod(deepClone);\r\n\r\n}","C:\\projects\\sports-pickem-app\\src\\components\\services.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Record\\Record.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Record\\SeasonRecord.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Record\\RecordLogic.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":29},{"ruleId":"109","severity":1,"message":"113","line":16,"column":20,"nodeType":"111","messageId":"112","endLine":16,"endColumn":25},{"ruleId":"105","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","severity":1,"message":"116","line":1,"column":10,"nodeType":"111","messageId":"112","endLine":1,"endColumn":18},{"ruleId":"109","severity":1,"message":"117","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":19},{"ruleId":"109","severity":1,"message":"118","line":2,"column":21,"nodeType":"111","messageId":"112","endLine":2,"endColumn":29},{"ruleId":"109","severity":1,"message":"119","line":2,"column":20,"nodeType":"111","messageId":"112","endLine":2,"endColumn":35},{"ruleId":"109","severity":1,"message":"120","line":14,"column":13,"nodeType":"111","messageId":"112","endLine":14,"endColumn":20},{"ruleId":"109","severity":1,"message":"113","line":14,"column":22,"nodeType":"111","messageId":"112","endLine":14,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":26,"column":8,"nodeType":"123","endLine":26,"endColumn":14,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"122","line":34,"column":8,"nodeType":"123","endLine":34,"endColumn":22,"suggestions":"125"},{"ruleId":"121","severity":1,"message":"126","line":19,"column":8,"nodeType":"123","endLine":19,"endColumn":28,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":48,"nodeType":"130","messageId":"131","endLine":6,"endColumn":50},{"ruleId":"128","severity":1,"message":"129","line":43,"column":21,"nodeType":"130","messageId":"131","endLine":43,"endColumn":23},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"no-unused-vars","'navigate' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["132"],["133"],"'useQuery' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useSubscription' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["134"],["135"],"React Hook useEffect has missing dependencies: 'loading' and 'props'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.",["136"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [data, props]",{"range":"143","text":"144"},"Update the dependencies array to be: [props, props.events]",{"range":"145","text":"146"},"Update the dependencies array to be: [loading, props, props.randomEvents]",{"range":"147","text":"148"},[836,842],"[data, props]",[1053,1067],"[props, props.events]",[620,640],"[loading, props, props.randomEvents]"]