[{"C:\\projects\\sports-pickem-app\\src\\index.js":"1","C:\\projects\\sports-pickem-app\\src\\App.js":"2","C:\\projects\\sports-pickem-app\\src\\reportWebVitals.js":"3","C:\\projects\\sports-pickem-app\\src\\components\\VersusJumbo\\VersusJumbo.js":"4","C:\\projects\\sports-pickem-app\\src\\components\\services.js":"5","C:\\projects\\sports-pickem-app\\src\\components\\LoadScreen\\LoadScreen.js":"6","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\ChooseSeason.js":"7","C:\\projects\\sports-pickem-app\\src\\graphql.js":"8","C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickCard.js":"9","C:\\projects\\sports-pickem-app\\src\\components\\Game\\SubmitPicks\\SubmitPicks.js":"10","C:\\projects\\sports-pickem-app\\src\\components\\Game\\Game.js":"11","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\SeasonTab.js":"12","C:\\projects\\sports-pickem-app\\src\\components\\Game\\GameLogic.js":"13","C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickButton.js":"14","C:\\projects\\sports-pickem-app\\src\\components\\Banner\\Banner.js":"15","C:\\projects\\sports-pickem-app\\src\\components\\Results\\Results.js":"16"},{"size":894,"mtime":1611362919492,"results":"17","hashOfConfig":"18"},{"size":1811,"mtime":1611534661482,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":227,"mtime":1611292081945,"results":"21","hashOfConfig":"18"},{"size":121,"mtime":1611362919491,"results":"22","hashOfConfig":"18"},{"size":475,"mtime":1611292081944,"results":"23","hashOfConfig":"18"},{"size":1051,"mtime":1611368072901,"results":"24","hashOfConfig":"18"},{"size":472,"mtime":1611368874326,"results":"25","hashOfConfig":"18"},{"size":1531,"mtime":1611521150397,"results":"26","hashOfConfig":"18"},{"size":280,"mtime":1611360532933,"results":"27","hashOfConfig":"18"},{"size":2195,"mtime":1611523848682,"results":"28","hashOfConfig":"18"},{"size":431,"mtime":1611368080847,"results":"29","hashOfConfig":"18"},{"size":325,"mtime":1611512838138,"results":"30","hashOfConfig":"18"},{"size":388,"mtime":1611382454318,"results":"31","hashOfConfig":"18"},{"size":778,"mtime":1611519831031,"results":"32","hashOfConfig":"18"},{"size":2093,"mtime":1611539277602,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1nwuhvc",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\sports-pickem-app\\src\\index.js",[],["72","73"],"C:\\projects\\sports-pickem-app\\src\\App.js",["74"],"import { useEffect, useState } from \"react\";\r\nimport { useRoutes } from 'hookrouter';\r\nimport { GET_SEASONS } from './graphql';\r\nimport { useQuery } from '@apollo/react-hooks'\r\nimport LoadScreen from \"./components/LoadScreen/LoadScreen\";\r\nimport ChooseSeason from \"./components/ChooseSeason/ChooseSeason\";\r\nimport Game from './components/Game/Game';\r\nimport Results from './components/Results/Results';\r\nimport Banner from './components/Banner/Banner';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  const { loading, error, data } = useQuery(GET_SEASONS);\r\n  const [seasons, setSeasons] = useState();\r\n  const [chosenSeason, setChosenSeason] = useState();\r\n  const [events, setEvents] = useState();\r\n  const [randomPicks, setRandomPicks] = useState();\r\n\r\n  const [picks, setPicks] = useState({\r\n    0: null,\r\n    1: null,\r\n    2: null,\r\n    3: null\r\n  });\r\n\r\n  const [record, setRecord] = useState({\r\n    overall: {\r\n      correct: 0,\r\n      total: 0,\r\n    },\r\n    years: {}\r\n  })\r\n  \r\n  const routes = {\r\n    '/': () => <ChooseSeason seasons={seasons} setChosenSeason={setChosenSeason}/>,\r\n\r\n    '/playGame' : () => <Game chosenSeason={chosenSeason} setEvents={setEvents} events={events} setRandomPicks={setRandomPicks} randomPicks={randomPicks} picks={picks} setPicks={setPicks}/>,\r\n\r\n    '/results' : () => <Results picks={picks} randomEvents={randomPicks} record={record} setRecord={setRecord} chosenSeason={chosenSeason}/>\r\n  }\r\n  \r\n  const routeResult = useRoutes(routes);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n      if(data) {\r\n          setSeasons(data.baseseasons);\r\n      }\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"App bg-light\">\r\n      <Banner year={chosenSeason} />\r\n      {\r\n        loading ? \r\n          <LoadScreen /> : routeResult\r\n      }\r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\projects\\sports-pickem-app\\src\\reportWebVitals.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\VersusJumbo\\VersusJumbo.js",[],["75","76"],"C:\\projects\\sports-pickem-app\\src\\components\\services.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\LoadScreen\\LoadScreen.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\ChooseSeason.js",["77","78","79"],"import { useQuery } from '@apollo/react-hooks';\r\nimport { useEffect, useState } from 'react';\r\nimport SeasonTab from './SeasonTab';\r\n\r\n\r\nconst ChooseSeason = (props) => {\r\n\r\n    return (\r\n        <div className='container-fluid'>\r\n            <div className='row'>\r\n                <div className='col-12'>\r\n                    <h3>Choose Historic NFL Season</h3>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <div className='list-group'>\r\n                        {\r\n                            props.seasons ?\r\n                                props.seasons.map((val) => {\r\n                                    return (\r\n                                        <SeasonTab seasonYear={val.strSeason} setChosenSeason={props.setChosenSeason}/>\r\n                                    )\r\n                                }) :\r\n                                null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChooseSeason","C:\\projects\\sports-pickem-app\\src\\graphql.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickCard.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\SubmitPicks\\SubmitPicks.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\Game.js",["80","81","82","83","84","85"],"import { useEffect, useState } from \"react\";\r\nimport { useQuery, useSubscription } from '@apollo/react-hooks';\r\nimport { GET_SEASON } from '../../graphql';\r\nimport LoadScreen from \"../LoadScreen/LoadScreen\";\r\nimport { getUniqueRandoms } from \"./GameLogic\";\r\nimport PickCard from './PickCard/PickCard';\r\nimport './Game.css';\r\nimport { navigate } from \"hookrouter\";\r\n\r\n\r\nconst Game = (props) => {\r\n\r\n    const { loading, error, data } = useQuery(GET_SEASON, {\r\n        variables: { year: props.chosenSeason }\r\n    });\r\n    const [allAnswered, setAllAnswered] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(data) props.setEvents(data.season.events)\r\n    }, [data]);\r\n\r\n    useEffect(() => {\r\n        if(props.events) {\r\n            let picks = getUniqueRandoms(props.events, 4);\r\n            props.setRandomPicks(picks);\r\n        }\r\n    }, [props.events]);\r\n\r\n    useEffect(() => {\r\n        for(let x in props.picks) {\r\n            if(!props.picks[x]) {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        setAllAnswered(true)\r\n    }, [props.picks]);\r\n\r\n    const resetGame = (picks) => {\r\n        resetPicks(picks);\r\n        navigate('/');\r\n    }\r\n\r\n    const resetPicks = (picks) => {\r\n        let clone = picks;\r\n        for(let x in clone) {\r\n            clone[x] = null;\r\n        }\r\n        props.setPicks([...props.picks, ...clone]);\r\n    }\r\n\r\n\r\n    if(!props.randomPicks) return <LoadScreen />\r\n    else {\r\n        return (\r\n            <div className='container-fluid'>\r\n                <div className='row pt-4'>\r\n                        {props.randomPicks.map((val, ind) => {\r\n                            return <PickCard pickQuestion={val.strEvent} choiceA={val.strHomeTeam} choiceB={val.strAwayTeam} date={val.dateEvent} setPicks={props.setPicks} picks={props.picks} ind={ind}/>\r\n                        })}\r\n                    <div className={`btn-dark text-light submit-button ${allAnswered ? 'fixed-bottom d-flex justify-content-center align-items-center' : 'd-none'}`} onClick={() => {\r\n                        navigate('/results')\r\n                    }}>SUBMIT</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game;","C:\\projects\\sports-pickem-app\\src\\components\\ChooseSeason\\SeasonTab.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\GameLogic.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Game\\PickCard\\PickButton.js",[],"C:\\projects\\sports-pickem-app\\src\\components\\Banner\\Banner.js",["86"],"\r\nconst Banner = (props) => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.year || null}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Banner","C:\\projects\\sports-pickem-app\\src\\components\\Results\\Results.js",["87","88","89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":14,"column":20,"nodeType":"96","messageId":"97","endLine":14,"endColumn":25},{"ruleId":"90","replacedBy":"98"},{"ruleId":"92","replacedBy":"99"},{"ruleId":"94","severity":1,"message":"100","line":1,"column":10,"nodeType":"96","messageId":"97","endLine":1,"endColumn":18},{"ruleId":"94","severity":1,"message":"101","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":19},{"ruleId":"94","severity":1,"message":"102","line":2,"column":21,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"103","line":2,"column":20,"nodeType":"96","messageId":"97","endLine":2,"endColumn":35},{"ruleId":"94","severity":1,"message":"104","line":13,"column":13,"nodeType":"96","messageId":"97","endLine":13,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":13,"column":22,"nodeType":"96","messageId":"97","endLine":13,"endColumn":27},{"ruleId":"105","severity":1,"message":"106","line":20,"column":8,"nodeType":"107","endLine":20,"endColumn":14,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":8,"nodeType":"107","endLine":27,"endColumn":22,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":39,"column":11,"nodeType":"96","messageId":"97","endLine":39,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":6,"column":17,"nodeType":"113","endLine":6,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":9,"column":52,"nodeType":"116","messageId":"117","endLine":9,"endColumn":54},{"ruleId":"114","severity":1,"message":"115","line":53,"column":25,"nodeType":"116","messageId":"117","endLine":53,"endColumn":27},{"ruleId":"105","severity":1,"message":"118","line":76,"column":8,"nodeType":"107","endLine":76,"endColumn":28,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["120"],["121"],"'useQuery' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useSubscription' is defined but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["122"],["123"],"'resetGame' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'gradePicks', 'props', and 'updateRecord'. Either include them or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [data, props]",{"range":"131","text":"132"},"Update the dependencies array to be: [props, props.events]",{"range":"133","text":"134"},"Update the dependencies array to be: [gradePicks, props, props.randomEvents, updateRecord]",{"range":"135","text":"136"},[663,669],"[data, props]",[846,860],"[props, props.events]",[1964,1984],"[gradePicks, props, props.randomEvents, updateRecord]"]